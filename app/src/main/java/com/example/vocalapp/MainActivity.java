package com.example.vocalapp;

import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.support.v7.widget.Toolbar;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.ProgressBar;
import static android.R.layout.simple_list_item_1;

/**
 * Activity for loading main features
 *
 * This class controls the methods which load the soundbank, shows the list of
 *     activities available, and allows the user to select an activity. The toolbar
 *     and menu options are set up here.
 * @author John Batty
 * @author Michelle Landen
 * @author Sheldyn Smith
 * @version 0.0.1
 */
public class MainActivity extends AppCompatActivity {

    /** Holds raw music note sample files */
    public static SoundBank soundBank;

    /** Creates string for Daily Tips PopUp */
    private String [] dailyTips;

    SharedPreferences sharedPref;

    /** Used to prevent the daily tip from showing every time the app is opened*/
    boolean hasShownTip;

    static final String DAILY_TIP_NUM = "dailyTipNum";

    /** Creates menu list for activity selection */
    ListView list;

    /** The list of Items that will display in ArrayList Menu */
    String exercises[] = {"Warm Ups", "Stretch Exercises", "Technical Exercises"};

    ProgressBar progressBar;

    /**
     * Called when app opens
     *
     * Instantiates the soundbank, creates the toolbar, creates the menu list
     * of exercise options. Stores daily tip to display.
     *
     * @param savedInstanceState Save state automatically generated by Android
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        progressBar = findViewById(R.id.progressBar);
        //create SoundBank
        soundBank = new SoundBank(getApplicationContext(), progressBar);

        //Tip of the Day, will display each time onCreate method is called
        hasShownTip = false;
        sharedPref = PreferenceManager.getDefaultSharedPreferences(this);
        dailyTips = new String [] {"Warming up your voice is like warming up your muscles, if you don't do it right you could hurt yourself.",
                "Engaging your diaphragm every time you sing is a healthy habit for all singers.",
                "Full complete breaths promote longevity of singing and agility",
                "Don't forget to tell your friends about this awesome vocal warm-up app!",
                "Start with something in the warm-up section, then move on to one of the other categories. These exercises will train your ear and stretch your vocal range."};

        // added for menu bar
        Toolbar appToolbar = findViewById(R.id.menu_bar);
        setSupportActionBar(appToolbar);

        // display the list view options
        initializeArrayAdapter();

    }

    /**
     * Calls daily tip pop up when app is first started
     */
    @Override
    protected void onStart() {
        super.onStart();
        if (!hasShownTip) {
            displayTip();
            hasShownTip = true;
        }
    }

    /**
     * Used to display a daily tip in a pop-up window
     *
     * Daily tip rotates through a pre-set string of daily tips. Uses the shared preferences
     * feature to store what number of tip to display.
     */
    private void displayTip() {
        int tipNum;
        if (sharedPref.contains(DAILY_TIP_NUM)) {
            tipNum = sharedPref.getInt(DAILY_TIP_NUM, 0);
        } else {
            tipNum = 0;
        }

        // creates pop up window for daily tip
        AlertDialog alertDialog = new AlertDialog.Builder(MainActivity.this).create();
        alertDialog.setTitle("Daily Tip");
        alertDialog.setMessage(dailyTips[tipNum]);
        alertDialog.setButton(AlertDialog.BUTTON_NEUTRAL, "OK",
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int which) {
                        dialog.dismiss();
                    }
                });
        alertDialog.show();
        tipNum++;
        tipNum %= 5;
        SharedPreferences.Editor prefEditor = sharedPref.edit();
        prefEditor.putInt(DAILY_TIP_NUM, tipNum);
        prefEditor.apply();
    }

    /**
     * Creates overflow menu in toolbar
     *
     * @param menu the menu in which options are to be placed
     * @return always true because we have just created the menu
     */
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.toolbar_menu, menu);
        return true;
    }

    /**
     * Calls exercise when selected from the overflow menu
     * @param item The item selected by user
     * @return true unless error
     */
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        Class activityClass;
        switch (item.getItemId()) {
            case R.id.warm_up:
                // User chose the "Warm Up" action, show the warm up options
                activityClass = WarmUpActivity.class;
                Intent intent = new Intent(getApplicationContext(), activityClass);
                startActivity(intent);
                return true;

            case R.id.stretch:
                // User chose the "stretch" action, show the stretch exercise options
                activityClass = StretchActivity.class;
                intent = new Intent(getApplicationContext(), activityClass);
                startActivity(intent);
                return true;

            case R.id.technical:
                // User chose the "technical" action, show the technical exercise options
                activityClass = TechnicalActivity.class;
                intent = new Intent(getApplicationContext(), activityClass);
                startActivity(intent);
                return true;

            default:
                // If we got here, the user's action was not recognized.
                // Invoke the superclass to handle it.
                return super.onOptionsItemSelected(item);
        }

    }



    /**
     * Initializes the ArrayList and sets up an event listener which will
     * start a new activity based on the item selected.
     */
    public void initializeArrayAdapter() {

        //Set Up the Array Adapter
        list = findViewById(R.id.simpleListView);
        ArrayAdapter<String> arrayAdapter = new ArrayAdapter<>(this,
                simple_list_item_1, exercises);
        list.setAdapter(arrayAdapter);
        //Event Listener for Items Clicked within ArrayList
        list.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {

                //Select An Activity Class to Launch Based On Item Clicked
                Class activityClass = null;

                switch (position) {
                    case 0:
                        activityClass = WarmUpActivity.class;
                        break;
                    case 1:
                        activityClass = StretchActivity.class;
                        break;
                    case 2:
                        activityClass = TechnicalActivity.class;
                        break;
                }

                //Start The New Activity Based on Class Selected.
                Intent intent = new Intent(getApplicationContext(),activityClass);
                startActivity(intent);
            }
        });
    }

    /**
     * Releases resources when the app is closed
     */
    @Override
    protected void onDestroy() {
        super.onDestroy();
        soundBank.releaseResources();
    }

}
